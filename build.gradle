plugins {
	id "fabric-loom" version "0.4-SNAPSHOT"
	id "maven-publish"
	id "com.jfrog.artifactory" version "4.15.2"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

if(rootProject.file("private.gradle").exists()) { //Publishing details
	apply from: "private.gradle"
}

archivesBaseName = "${project.archives_base_name}"
group = "${project.maven_group}"
version = "${project.mod_version}+${project.minecraft_version}"

minecraft {
}

repositories {
	maven { url "https://server.bbkr.space/artifactory/libs-release" } // Cotton maven - home of Cotton projects
	maven { url "https://maven.abusedmaster.xyz" } // NerdHub maven
	maven {
		name = "Onyx Studios"
		url = "https://maven.onyxstudios.dev"
	}
	maven { url 'https://jitpack.io' }
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}

	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}

	maven {
		url = "https://ytg1234.github.io/maven"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "de.siphalor:nbtcrafting-1.16:2+"
	include "de.siphalor:nbtcrafting-1.16:2+"

	modImplementation "io.github.cottonmc:LibGui:${project.libGui_version}"

	//modImplementation "com.github.TeamMidnightDust:ThisRocks:1.2.2"

	// Config library
	modApi ("me.shedaniel.cloth:config-2:4.8.3") { exclude module: 'fabric-api' }
	include "me.shedaniel.cloth:config-2:4.8.3"
	// Config ease-of-use
	modApi ("me.sargunvohra.mcmods:autoconfig1u:3.3.1") { exclude module: 'fabric-api' }
	include "me.sargunvohra.mcmods:autoconfig1u:3.3.1"
	// Config menu support, optional dependency
	modImplementation ("io.github.prospector:modmenu:1.14.13+build.19") { exclude module: 'fabric-api' }
	// Recipe conditions, optional dependency
	modImplementation("io.github.ytg1234:fabric-recipe-conditions:0.4.0")

	// invoker transformation
	modImplementation 'com.github.Chocohead:Fabric-ASM:v2.2'
	include 'com.github.Chocohead:Fabric-ASM:v2.2'

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	inputs.property "version", project.version
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand version: project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				classifier null
				builtBy remapJar
			}

			/*artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}*/

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "https://server.bbkr.space/artifactory/"
		publish {
			repository {
				if (version.contains("SNAPSHOT")) {
					repoKey = "libs-snapshot"
				} else {
					repoKey = "libs-release"
				}

				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")

				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}