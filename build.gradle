plugins {
	id "fabric-loom" version "0.10-SNAPSHOT"
	id "maven-publish"
	id "com.jfrog.artifactory" version "4.15.2"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

if(rootProject.file("private.gradle").exists()) { //Publishing details
	apply from: "private.gradle"
}

archivesBaseName = "${project.archives_base_name}"
group = "${project.maven_group}"
version = "${project.mod_version}+${project.minecraft_version}"

minecraft {
}

repositories {
	maven { url "https://server.bbkr.space/artifactory/libs-release" } // Cotton maven - home of Cotton projects
	maven {
		name = "Onyx Studios"
		url = "https://maven.onyxstudios.dev"
	}
	maven { url 'https://jitpack.io' }
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}

	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		url = "https://ytg1234.github.io/maven"
	}
	maven { url "https://maven.shedaniel.me/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "de.siphalor:nbtcrafting-1.18:2.1.3+mc1.18.2"
	include "de.siphalor:nbtcrafting-1.18:2.1.3+mc1.18.2"

	modImplementation "io.github.cottonmc:LibGui:${project.libGui_version}"

	//modImplementation "com.github.TeamMidnightDust:ThisRocks:1.2.2"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include ("me.shedaniel.cloth:cloth-config-fabric:${project.config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	// Recipe conditions, optional dependency
	//modImplementation("io.github.ytg1234:fabric-recipe-conditions:0.4.1")

//	// invoker transformation
//	modImplementation 'com.github.Chocohead:Fabric-ASM:v2.2'
//	include 'com.github.Chocohead:Fabric-ASM:v2.2'

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				classifier null
				builtBy remapJar
			}

			/*artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}*/

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "https://server.bbkr.space/artifactory/"
		publish {
			repository {
				if (version.contains("SNAPSHOT")) {
					repoKey = "libs-snapshot"
				} else {
					repoKey = "libs-release"
				}

				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")

				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}